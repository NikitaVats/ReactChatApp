{"ast":null,"code":"var _jsxFileName = \"/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MessageInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = ({\n  onSendMessage,\n  onTypingStatus,\n  disabled\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    if (!isTyping) {\n      setIsTyping(true);\n      onTypingStatus(true);\n    }\n\n    // Clear existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set new timeout to stop typing indicator\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n      onTypingStatus(false);\n    }, 1000);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (message.trim() && !disabled) {\n      onSendMessage(message);\n      setMessage('');\n\n      // Stop typing indicator\n      if (isTyping) {\n        setIsTyping(false);\n        onTypingStatus(false);\n      }\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-input-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: handleTyping,\n        onKeyPress: handleKeyPress,\n        placeholder: disabled ? \"Connecting...\" : \"Type a message...\",\n        disabled: disabled,\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: disabled || !message.trim(),\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"Zf/Ixw+7xs3hFjEuenzHpzbw8oI=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MessageInput","onSendMessage","onTypingStatus","disabled","_s","message","setMessage","isTyping","setIsTyping","typingTimeoutRef","current","clearTimeout","handleTyping","e","target","value","setTimeout","handleSubmit","preventDefault","trim","handleKeyPress","key","shiftKey","className","children","onSubmit","type","onChange","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/MessageInput.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './MessageInput.css';\n\nconst MessageInput = ({ onSendMessage, onTypingStatus, disabled }) => {\n  const [message, setMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleTyping = (e) => {\n    setMessage(e.target.value);\n    \n    if (!isTyping) {\n      setIsTyping(true);\n      onTypingStatus(true);\n    }\n\n    // Clear existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set new timeout to stop typing indicator\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n      onTypingStatus(false);\n    }, 1000);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (message.trim() && !disabled) {\n      onSendMessage(message);\n      setMessage('');\n      \n      // Stop typing indicator\n      if (isTyping) {\n        setIsTyping(false);\n        onTypingStatus(false);\n      }\n      \n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <div className=\"message-input-container\">\n      <form onSubmit={handleSubmit} className=\"message-input-form\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={handleTyping}\n          onKeyPress={handleKeyPress}\n          placeholder={disabled ? \"Connecting...\" : \"Type a message...\"}\n          disabled={disabled}\n          className=\"message-input\"\n        />\n        <button \n          type=\"submit\" \n          disabled={disabled || !message.trim()}\n          className=\"send-button\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}