{"ast":null,"code":"var _jsxFileName = \"/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/MessageList.js\";\nimport React from 'react';\nimport './MessageList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages,\n  currentUser,\n  typingUsers,\n  messagesEndRef\n}) => {\n  const formatTime = timestamp => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender === currentUser ? 'own-message' : 'other-message'}`,\n      children: message.type === 'CHAT' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: formatTime(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"system-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, message.id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [typingUsers.join(', '), \" \", typingUsers.length === 1 ? 'is' : 'are', \" typing...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","messages","currentUser","typingUsers","messagesEndRef","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","className","children","map","message","index","sender","type","fileName","_jsxFileName","lineNumber","columnNumber","content","id","length","join","ref","_c","$RefreshReg$"],"sources":["/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/MessageList.js"],"sourcesContent":["import React from 'react';\nimport './MessageList.css';\n\nconst MessageList = ({ messages, currentUser, typingUsers, messagesEndRef }) => {\n  const formatTime = (timestamp) => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"message-list\">\n      {messages.map((message, index) => (\n        <div\n          key={message.id || index}\n          className={`message ${message.sender === currentUser ? 'own-message' : 'other-message'}`}\n        >\n          {message.type === 'CHAT' ? (\n            <>\n              <div className=\"message-header\">\n                <span className=\"message-sender\">{message.sender}</span>\n                <span className=\"message-time\">{formatTime(message.timestamp)}</span>\n              </div>\n              <div className=\"message-content\">{message.content}</div>\n            </>\n          ) : (\n            <div className=\"system-message\">\n              <span>{message.content}</span>\n            </div>\n          )}\n        </div>\n      ))}\n      \n      {typingUsers.length > 0 && (\n        <div className=\"typing-indicator\">\n          <span>{typingUsers.join(', ')} {typingUsers.length === 1 ? 'is' : 'are'} typing...</span>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}