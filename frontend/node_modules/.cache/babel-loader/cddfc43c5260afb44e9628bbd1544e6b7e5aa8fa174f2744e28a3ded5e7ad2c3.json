{"ast":null,"code":"var _jsxFileName = \"/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatRoom.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  user,\n  stompClient,\n  connected,\n  onLogout\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (stompClient) {\n      stompClient.subscribe('/topic/public', message => {\n        const receivedMessage = JSON.parse(message.body);\n        if (receivedMessage.type === 'CHAT') {\n          setMessages(prev => [...prev, receivedMessage]);\n        } else if (receivedMessage.type === 'JOIN') {\n          setMessages(prev => [...prev, {\n            ...receivedMessage,\n            content: `${receivedMessage.sender} joined the chat!`\n          }]);\n        } else if (receivedMessage.type === 'LEAVE') {\n          setMessages(prev => [...prev, {\n            ...receivedMessage,\n            content: `${receivedMessage.sender} left the chat!`\n          }]);\n        } else if (receivedMessage.type === 'TYPING') {\n          if (receivedMessage.content === 'START') {\n            setTypingUsers(prev => prev.includes(receivedMessage.sender) ? prev : [...prev, receivedMessage.sender]);\n          } else if (receivedMessage.content === 'STOP') {\n            setTypingUsers(prev => prev.filter(username => username !== receivedMessage.sender));\n          }\n        }\n      });\n    }\n  }, [stompClient]);\n  const sendMessage = content => {\n    if (stompClient && content.trim()) {\n      const chatMessage = {\n        sender: user,\n        content: content.trim(),\n        type: 'CHAT'\n      };\n      stompClient.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify(chatMessage)\n      });\n    }\n  };\n  const sendTypingStatus = isTyping => {\n    if (stompClient) {\n      const typingMessage = {\n        sender: user,\n        content: isTyping ? 'START' : 'STOP',\n        type: 'TYPING'\n      };\n      stompClient.publish({\n        destination: \"/app/chat.typing\",\n        body: JSON.stringify(typingMessage)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connected ? 'connected' : 'disconnected'}`,\n          children: connected ? '●' : '○'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages,\n      currentUser: user,\n      typingUsers: typingUsers,\n      messagesEndRef: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: sendMessage,\n      onTypingStatus: sendTypingStatus,\n      disabled: !connected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"eZ97KK68La67yvVEBnxjEERO+hc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageList","MessageInput","jsxDEV","_jsxDEV","ChatRoom","user","stompClient","connected","onLogout","_s","messages","setMessages","typingUsers","setTypingUsers","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","subscribe","message","receivedMessage","JSON","parse","body","type","prev","content","sender","includes","filter","username","sendMessage","trim","chatMessage","publish","destination","stringify","sendTypingStatus","isTyping","typingMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentUser","onSendMessage","onTypingStatus","disabled","_c","$RefreshReg$"],"sources":["/Users/nikitavats/Documents/Nikita's Projects/ReactChatApp/frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatRoom.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\n\nconst ChatRoom = ({ user, stompClient, connected, onLogout }) => {\n  const [messages, setMessages] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    if (stompClient) {\n      stompClient.subscribe('/topic/public', (message) => {\n        const receivedMessage = JSON.parse(message.body);\n        \n        if (receivedMessage.type === 'CHAT') {\n          setMessages(prev => [...prev, receivedMessage]);\n        } else if (receivedMessage.type === 'JOIN') {\n          setMessages(prev => [...prev, {\n            ...receivedMessage,\n            content: `${receivedMessage.sender} joined the chat!`\n          }]);\n        } else if (receivedMessage.type === 'LEAVE') {\n          setMessages(prev => [...prev, {\n            ...receivedMessage,\n            content: `${receivedMessage.sender} left the chat!`\n          }]);\n        } else if (receivedMessage.type === 'TYPING') {\n          if (receivedMessage.content === 'START') {\n            setTypingUsers(prev => \n              prev.includes(receivedMessage.sender) \n                ? prev \n                : [...prev, receivedMessage.sender]\n            );\n          } else if (receivedMessage.content === 'STOP') {\n            setTypingUsers(prev => \n              prev.filter(username => username !== receivedMessage.sender)\n            );\n          }\n        }\n      });\n    }\n  }, [stompClient]);\n\n  const sendMessage = (content) => {\n    if (stompClient && content.trim()) {\n      const chatMessage = {\n        sender: user,\n        content: content.trim(),\n        type: 'CHAT'\n      };\n      stompClient.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify(chatMessage)\n      });\n    }\n  };\n\n  const sendTypingStatus = (isTyping) => {\n    if (stompClient) {\n      const typingMessage = {\n        sender: user,\n        content: isTyping ? 'START' : 'STOP',\n        type: 'TYPING'\n      };\n      stompClient.publish({\n        destination: \"/app/chat.typing\",\n        body: JSON.stringify(typingMessage)\n      });\n    }\n  };\n\n  return (\n    <div className=\"chat-room\">\n      <div className=\"chat-header\">\n        <h2>Chat Room</h2>\n        <div className=\"user-info\">\n          <span className=\"username\">{user}</span>\n          <span className={`connection-status ${connected ? 'connected' : 'disconnected'}`}>\n            {connected ? '●' : '○'}\n          </span>\n          <button onClick={onLogout} className=\"logout-btn\">Logout</button>\n        </div>\n      </div>\n      \n      <MessageList \n        messages={messages} \n        currentUser={user}\n        typingUsers={typingUsers}\n        messagesEndRef={messagesEndRef}\n      />\n      \n      <MessageInput \n        onSendMessage={sendMessage}\n        onTypingStatus={sendTypingStatus}\n        disabled={!connected}\n      />\n    </div>\n  );\n};\n\nexport default ChatRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}